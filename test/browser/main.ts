import * as parquetjs from '../../dist/browser/parquet.esm';
import { assert } from 'chai';

const buffer = require('buffer');

describe('Browser tests', function () {
  describe('reader', function () {
    it('can read snappy compressed data', async function () {
      // Data from test/test-files/snappy-compressed.parquet
      const uint8Array = [
        80, 65, 82, 49, 21, 6, 21, 80, 21, 82, 92, 21, 8, 21, 0, 21, 8, 21, 0, 21, 0, 21, 0, 17, 28, 24, 5, 119, 111,
        114, 108, 100, 24, 8, 49, 112, 111, 97, 52, 98, 112, 102, 22, 0, 22, 8, 24, 5, 119, 111, 114, 108, 100, 24, 8,
        49, 112, 111, 97, 52, 98, 112, 102, 0, 0, 0, 40, 32, 5, 0, 0, 0, 104, 101, 108, 108, 111, 1, 9, 104, 119, 111,
        114, 108, 100, 6, 0, 0, 0, 98, 97, 110, 97, 110, 97, 8, 0, 0, 0, 49, 112, 111, 97, 52, 98, 112, 102, 21, 12, 25,
        37, 6, 0, 25, 24, 16, 99, 111, 109, 112, 114, 101, 115, 115, 101, 100, 83, 116, 114, 105, 110, 103, 21, 2, 22,
        8, 22, 206, 1, 22, 206, 1, 38, 8, 60, 24, 5, 119, 111, 114, 108, 100, 24, 8, 49, 112, 111, 97, 52, 98, 112, 102,
        22, 0, 22, 8, 24, 5, 119, 111, 114, 108, 100, 24, 8, 49, 112, 111, 97, 52, 98, 112, 102, 0, 0, 41, 24, 8, 49,
        112, 111, 97, 52, 98, 112, 102, 25, 24, 5, 119, 111, 114, 108, 100, 0, 25, 28, 22, 8, 21, 206, 1, 22, 0, 0, 0,
        21, 2, 25, 44, 72, 4, 114, 111, 111, 116, 21, 2, 0, 21, 12, 37, 0, 24, 16, 99, 111, 109, 112, 114, 101, 115,
        115, 101, 100, 83, 116, 114, 105, 110, 103, 37, 0, 0, 22, 8, 25, 28, 25, 28, 38, 214, 1, 28, 21, 12, 25, 37, 6,
        0, 25, 24, 16, 99, 111, 109, 112, 114, 101, 115, 115, 101, 100, 83, 116, 114, 105, 110, 103, 21, 2, 22, 8, 22,
        206, 1, 22, 206, 1, 38, 8, 60, 24, 5, 119, 111, 114, 108, 100, 24, 8, 49, 112, 111, 97, 52, 98, 112, 102, 22, 0,
        22, 8, 24, 5, 119, 111, 114, 108, 100, 24, 8, 49, 112, 111, 97, 52, 98, 112, 102, 0, 0, 22, 154, 3, 21, 22, 22,
        242, 2, 21, 40, 0, 22, 234, 2, 22, 8, 0, 25, 12, 24, 15, 64, 100, 115, 110, 112, 47, 112, 97, 114, 113, 117,
        101, 116, 106, 115, 0, 163, 0, 0, 0, 80, 65, 82, 49,
      ];
      const snappyCompressedBuffer = buffer.Buffer.from(uint8Array);
      const reader = await parquetjs.ParquetReader.openBuffer(snappyCompressedBuffer);
      const data: any[] = [];
      for await (const record of reader) {
        data.push(record);
      }
      assert.equal(data.length, 4);

      after(async function () {
        await reader.close();
      });
    });

    it('can read gzip compressed data', async function () {
      // Data from test/test-files/gzip-nation.impala.parquet
      const uint8Array = [
        80, 65, 82, 49, 21, 0, 21, 212, 1, 21, 132, 1, 44, 21, 50, 21, 0, 21, 6, 21, 8, 0, 0, 31, 139, 8, 0, 0, 0, 0, 0,
        0, 3, 21, 196, 197, 1, 128, 64, 12, 0, 176, 114, 184, 187, 204, 193, 254, 195, 17, 30, 73, 138, 136, 55, 83,
        252, 37, 114, 10, 74, 42, 106, 26, 90, 58, 122, 6, 70, 38, 102, 22, 86, 54, 118, 14, 78, 46, 110, 30, 62, 67, 2,
        243, 142, 106, 0, 0, 0, 38, 178, 1, 28, 21, 2, 25, 37, 0, 6, 25, 24, 11, 110, 95, 110, 97, 116, 105, 111, 110,
        107, 101, 121, 21, 4, 22, 50, 22, 250, 1, 22, 170, 1, 38, 8, 0, 0, 21, 4, 21, 170, 4, 21, 248, 2, 76, 21, 50,
        21, 4, 0, 0, 31, 139, 8, 0, 0, 0, 0, 0, 0, 3, 69, 142, 91, 18, 194, 48, 8, 69, 251, 225, 123, 212, 53, 184, 149,
        219, 4, 43, 106, 72, 37, 137, 51, 237, 254, 23, 34, 84, 103, 252, 202, 1, 78, 46, 108, 187, 174, 195, 115, 32,
        101, 236, 29, 117, 32, 169, 44, 216, 88, 209, 43, 102, 126, 58, 5, 8, 34, 214, 70, 52, 76, 99, 221, 57, 212, 27,
        231, 145, 23, 241, 170, 144, 64, 91, 35, 11, 74, 144, 201, 77, 150, 248, 205, 52, 200, 66, 133, 177, 242, 194,
        212, 223, 251, 114, 235, 142, 17, 226, 25, 247, 172, 17, 226, 173, 7, 201, 4, 15, 75, 89, 115, 8, 249, 176, 224,
        140, 212, 243, 171, 145, 127, 30, 73, 155, 155, 225, 102, 151, 186, 169, 217, 182, 50, 142, 134, 5, 45, 242, 5,
        138, 158, 151, 209, 155, 169, 10, 146, 175, 208, 86, 236, 138, 179, 81, 19, 174, 20, 47, 15, 150, 33, 230, 116,
        250, 119, 74, 69, 165, 242, 1, 116, 204, 243, 193, 21, 1, 0, 0, 21, 0, 21, 48, 21, 88, 44, 21, 50, 21, 4, 21, 6,
        21, 8, 0, 0, 31, 139, 8, 0, 0, 0, 0, 0, 0, 3, 99, 98, 96, 96, 48, 98, 100, 229, 84, 232, 112, 236, 178, 212, 88,
        121, 116, 86, 181, 193, 41, 207, 213, 123, 37, 0, 169, 207, 22, 92, 24, 0, 0, 0, 38, 142, 6, 28, 21, 12, 25, 53,
        0, 6, 4, 25, 24, 6, 110, 95, 110, 97, 109, 101, 21, 4, 22, 50, 22, 154, 5, 22, 144, 4, 38, 148, 5, 38, 254, 1,
        0, 0, 21, 0, 21, 212, 1, 21, 112, 44, 21, 50, 21, 0, 21, 6, 21, 8, 0, 0, 31, 139, 8, 0, 0, 0, 0, 0, 0, 3, 99,
        98, 96, 96, 48, 98, 4, 18, 12, 140, 72, 152, 133, 1, 2, 152, 161, 152, 9, 138, 89, 160, 152, 9, 73, 13, 12, 48,
        66, 197, 153, 145, 212, 192, 244, 131, 228, 0, 65, 89, 191, 200, 106, 0, 0, 0, 38, 238, 7, 28, 21, 2, 25, 37, 0,
        6, 25, 24, 11, 110, 95, 114, 101, 103, 105, 111, 110, 107, 101, 121, 21, 4, 22, 50, 22, 248, 1, 22, 148, 1, 38,
        218, 6, 0, 0, 21, 4, 21, 202, 30, 21, 216, 11, 76, 21, 50, 21, 4, 0, 0, 31, 139, 8, 0, 0, 0, 0, 0, 0, 3, 109,
        85, 75, 143, 19, 49, 12, 222, 127, 66, 14, 136, 83, 153, 3, 28, 144, 86, 66, 43, 56, 35, 184, 131, 56, 164, 169,
        103, 154, 109, 26, 207, 230, 177, 219, 249, 247, 56, 47, 39, 179, 203, 165, 170, 38, 126, 124, 159, 253, 217,
        254, 124, 119, 119, 39, 206, 114, 89, 12, 76, 66, 73, 7, 115, 52, 102, 19, 179, 182, 210, 136, 19, 172, 232,
        117, 240, 244, 39, 128, 10, 194, 155, 141, 222, 228, 34, 245, 15, 114, 35, 131, 25, 111, 224, 197, 234, 240,
        170, 61, 180, 103, 165, 208, 157, 180, 93, 68, 64, 17, 206, 32, 28, 44, 209, 72, 151, 31, 162, 13, 126, 18, 71,
        52, 39, 250, 252, 20, 193, 83, 112, 105, 208, 94, 40, 222, 150, 255, 45, 94, 159, 64, 224, 156, 93, 87, 176, 57,
        82, 3, 50, 66, 244, 43, 40, 77, 24, 86, 169, 46, 114, 33, 24, 244, 34, 228, 17, 99, 200, 174, 218, 161, 213,
        138, 16, 58, 122, 155, 42, 182, 230, 3, 148, 14, 164, 39, 226, 20, 188, 88, 30, 132, 215, 6, 108, 224, 120, 205,
        167, 193, 223, 229, 153, 163, 211, 24, 201, 64, 224, 51, 184, 156, 48, 104, 250, 37, 175, 217, 196, 121, 214,
        244, 146, 88, 170, 194, 235, 72, 86, 217, 168, 195, 143, 54, 250, 72, 80, 232, 43, 158, 208, 232, 144, 125, 75,
        217, 227, 66, 44, 74, 162, 167, 168, 213, 37, 87, 213, 161, 247, 57, 70, 207, 221, 160, 157, 222, 81, 154, 103,
        176, 29, 227, 139, 188, 176, 239, 148, 237, 62, 144, 201, 190, 187, 173, 1, 83, 139, 115, 40, 165, 184, 39, 75,
        42, 171, 145, 1, 12, 12, 207, 220, 64, 113, 251, 232, 228, 118, 223, 40, 28, 118, 6, 223, 200, 155, 128, 194,
        77, 69, 79, 64, 148, 124, 68, 211, 165, 193, 36, 122, 149, 89, 100, 171, 211, 84, 126, 233, 40, 135, 75, 170,
        44, 62, 112, 91, 29, 144, 147, 244, 219, 117, 13, 152, 203, 196, 188, 155, 107, 17, 112, 241, 24, 53, 82, 69,
        112, 70, 117, 129, 45, 81, 218, 192, 121, 50, 3, 88, 197, 209, 164, 134, 141, 246, 159, 146, 42, 138, 227, 27,
        37, 22, 48, 60, 22, 164, 75, 176, 74, 39, 48, 223, 201, 43, 37, 97, 48, 71, 68, 79, 60, 2, 174, 217, 179, 117,
        112, 95, 244, 7, 254, 94, 200, 188, 167, 40, 185, 169, 85, 4, 7, 38, 190, 232, 57, 112, 29, 229, 23, 178, 27,
        147, 37, 141, 52, 38, 131, 250, 123, 9, 186, 124, 255, 166, 162, 182, 137, 106, 253, 169, 149, 235, 154, 234,
        163, 86, 77, 59, 146, 149, 250, 131, 226, 8, 210, 86, 129, 177, 212, 87, 73, 140, 195, 239, 36, 49, 155, 230,
        187, 1, 202, 131, 78, 162, 113, 9, 233, 21, 211, 78, 72, 224, 12, 122, 248, 223, 100, 17, 162, 1, 73, 118, 102,
        25, 62, 124, 76, 194, 154, 120, 90, 219, 252, 116, 93, 20, 76, 156, 219, 61, 146, 195, 160, 98, 126, 24, 150,
        10, 183, 177, 164, 110, 116, 6, 157, 66, 30, 171, 78, 124, 183, 129, 202, 194, 40, 99, 241, 135, 178, 169, 87,
        210, 232, 92, 90, 9, 45, 6, 116, 86, 55, 13, 238, 55, 76, 95, 144, 36, 60, 89, 109, 234, 128, 32, 133, 47, 70,
        157, 239, 126, 225, 213, 100, 226, 26, 77, 208, 171, 209, 164, 244, 137, 243, 238, 184, 90, 185, 12, 43, 169,
        20, 84, 14, 227, 82, 113, 252, 164, 148, 9, 76, 165, 201, 251, 154, 175, 69, 109, 35, 203, 163, 181, 177, 112,
        27, 138, 200, 163, 70, 17, 115, 11, 40, 158, 86, 212, 131, 113, 190, 153, 124, 42, 249, 161, 142, 203, 175, 164,
        217, 126, 41, 232, 242, 88, 95, 232, 114, 103, 115, 235, 44, 164, 53, 252, 230, 244, 236, 103, 204, 229, 70,
        126, 205, 187, 223, 182, 57, 125, 123, 80, 250, 94, 228, 133, 71, 54, 189, 241, 54, 239, 244, 130, 111, 60, 22,
        248, 82, 239, 97, 157, 85, 94, 191, 13, 69, 59, 48, 140, 252, 232, 64, 170, 243, 171, 178, 83, 172, 166, 237,
        166, 187, 127, 35, 248, 110, 78, 165, 7, 0, 0, 21, 0, 21, 48, 21, 88, 44, 21, 50, 21, 4, 21, 6, 21, 8, 0, 0, 31,
        139, 8, 0, 0, 0, 0, 0, 0, 3, 99, 98, 96, 96, 48, 98, 100, 229, 84, 232, 112, 236, 178, 212, 88, 121, 116, 86,
        181, 193, 41, 207, 213, 123, 37, 0, 169, 207, 22, 92, 24, 0, 0, 0, 38, 172, 21, 28, 21, 12, 25, 53, 0, 6, 4, 25,
        24, 9, 110, 95, 99, 111, 109, 109, 101, 110, 116, 21, 4, 22, 50, 22, 186, 31, 22, 240, 12, 38, 178, 20, 38, 188,
        8, 0, 0, 21, 2, 25, 92, 72, 6, 115, 99, 104, 101, 109, 97, 21, 8, 0, 21, 2, 37, 2, 24, 11, 110, 95, 110, 97,
        116, 105, 111, 110, 107, 101, 121, 0, 21, 12, 37, 2, 24, 6, 110, 95, 110, 97, 109, 101, 0, 21, 2, 37, 2, 24, 11,
        110, 95, 114, 101, 103, 105, 111, 110, 107, 101, 121, 0, 21, 12, 37, 2, 24, 9, 110, 95, 99, 111, 109, 109, 101,
        110, 116, 0, 22, 50, 25, 28, 25, 76, 38, 178, 1, 28, 21, 2, 25, 37, 0, 6, 25, 24, 11, 110, 95, 110, 97, 116,
        105, 111, 110, 107, 101, 121, 21, 4, 22, 50, 22, 250, 1, 22, 170, 1, 38, 8, 0, 0, 38, 142, 6, 28, 21, 12, 25,
        53, 0, 6, 4, 25, 24, 6, 110, 95, 110, 97, 109, 101, 21, 4, 22, 50, 22, 154, 5, 22, 144, 4, 38, 148, 5, 38, 254,
        1, 0, 0, 38, 238, 7, 28, 21, 2, 25, 37, 0, 6, 25, 24, 11, 110, 95, 114, 101, 103, 105, 111, 110, 107, 101, 121,
        21, 4, 22, 50, 22, 248, 1, 22, 148, 1, 38, 218, 6, 0, 0, 38, 172, 21, 28, 21, 12, 25, 53, 0, 6, 4, 25, 24, 9,
        110, 95, 99, 111, 109, 109, 101, 110, 116, 21, 4, 22, 50, 22, 186, 31, 22, 240, 12, 38, 178, 20, 38, 188, 8, 0,
        0, 22, 190, 19, 22, 50, 0, 40, 76, 105, 109, 112, 97, 108, 97, 32, 118, 101, 114, 115, 105, 111, 110, 32, 49,
        46, 50, 45, 73, 78, 84, 69, 82, 78, 65, 76, 32, 40, 98, 117, 105, 108, 100, 32, 97, 52, 54, 50, 101, 99, 52, 50,
        101, 53, 53, 48, 99, 55, 53, 102, 99, 99, 98, 102, 102, 57, 56, 99, 55, 50, 48, 102, 51, 55, 102, 51, 101, 101,
        57, 100, 53, 53, 97, 51, 41, 0, 71, 1, 0, 0, 80, 65, 82, 49,
      ];
      const gzipCompressedBuffer = buffer.Buffer.from(uint8Array);
      const reader = await parquetjs.ParquetReader.openBuffer(gzipCompressedBuffer);
      const data: any[] = [];
      for await (const record of reader) {
        data.push(record);
      }
      assert.equal(data.length, 25);

      after(async function () {
        await reader.close();
      });
    });
  });
});
